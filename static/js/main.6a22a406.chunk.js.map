{"version":3,"sources":["config.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["maxTemp","x","moment","valueOf","y","minTemp","chartConfig","type","options","plugins","zoom","wheel","enabled","pinch","mode","onZoomComplete","chart","console","log","Math","random","pan","onPanComplete","tooltip","intersect","onHover","e","elements","scales","grid","color","tickColor","ticks","autoSkip","autoSkipPadding","maxRotation","drawBorder","data","datasets","label","borderColor","borderCapStyle","borderDash","Chart","register","registerables","zoomPlugin","App","divRef","useRef","useState","setChart","useEffect","chartInstance","current","destroy","style","height","display","justifyContent","alignItems","flexDirection","margin","marginRight","onClick","zoomScale","min","subtract","max","update","resetZoom","width","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6a22a406.chunk.js","sourcesContent":["import {\r\n  ActiveElement,\r\n  Chart,\r\n  ChartConfiguration,\r\n  ChartData,\r\n  ChartEvent,\r\n  ChartOptions,\r\n  ScaleOptions,\r\n} from \"chart.js\";\r\nimport { ZoomPluginOptions } from \"chartjs-plugin-zoom/types/options\";\r\nimport moment from \"moment\";\r\n\r\nconst maxTemp = [\r\n  { x: moment(\"2021-09-30 03:00:00\").valueOf(), y: -6.8 },\r\n  { x: moment(\"2021-09-30 04:00:00\").valueOf(), y: -6.2 },\r\n  { x: moment(\"2021-09-30 05:00:00\").valueOf(), y: -5.5 },\r\n\r\n  { x: moment(\"2021-09-30 06:00:00\").valueOf(), y: -2 },\r\n  { x: moment(\"2021-09-30 07:00:00\").valueOf(), y: 2 },\r\n  { x: moment(\"2021-09-30 08:00:00\").valueOf(), y: 0 },\r\n\r\n  { x: moment(\"2021-09-30 09:00:00\").valueOf(), y: -3 },\r\n  { x: moment(\"2021-09-30 10:00:00\").valueOf(), y: 2 },\r\n  { x: moment(\"2021-09-30 11:00:00\").valueOf(), y: -1 },\r\n];\r\n\r\nconst minTemp = [\r\n  { x: moment(\"2021-09-30 03:00:00\").valueOf(), y: -7 },\r\n  { x: moment(\"2021-09-30 04:00:00\").valueOf(), y: -9 },\r\n  { x: moment(\"2021-09-30 05:00:00\").valueOf(), y: -11 },\r\n\r\n  { x: moment(\"2021-09-30 06:00:00\").valueOf(), y: -15 },\r\n  { x: moment(\"2021-09-30 07:00:00\").valueOf(), y: -7 },\r\n  { x: moment(\"2021-09-30 08:00:00\").valueOf(), y: -7.5 },\r\n\r\n  { x: moment(\"2021-09-30 09:00:00\").valueOf(), y: -6 },\r\n  { x: moment(\"2021-09-30 10:00:00\").valueOf(), y: -7 },\r\n  { x: moment(\"2021-09-30 11:00:00\").valueOf(), y: -6.5 },\r\n];\r\n\r\nconst meanTemp = [\r\n  { x: moment(\"2021-09-30 03:00:00\").valueOf(), y: -7 },\r\n  { x: moment(\"2021-09-30 04:00:00\").valueOf(), y: -6.5 },\r\n  { x: moment(\"2021-09-30 05:00:00\").valueOf(), y: -6 },\r\n\r\n  { x: moment(\"2021-09-30 06:00:00\").valueOf(), y: -5.5 },\r\n  { x: moment(\"2021-09-30 07:00:00\").valueOf(), y: -5 },\r\n  { x: moment(\"2021-09-30 08:00:00\").valueOf(), y: -4.5 },\r\n\r\n  { x: moment(\"2021-09-30 09:00:00\").valueOf(), y: -4 },\r\n  { x: moment(\"2021-09-30 10:00:00\").valueOf(), y: -3.5 },\r\n  { x: moment(\"2021-09-30 11:00:00\").valueOf(), y: -3 },\r\n];\r\n\r\nconst data: ChartData<\"line\"> = {\r\n  datasets: [\r\n    {\r\n      label: \"mean temp\",\r\n      data: meanTemp,\r\n      borderColor: \"#FFAB00\",\r\n      borderCapStyle: \"round\",\r\n      borderDash: [6, 6],\r\n    },\r\n    {\r\n      label: \"min temp\",\r\n      data: minTemp,\r\n      borderColor: \"#525252\",\r\n      borderCapStyle: \"round\",\r\n    },\r\n    {\r\n      label: \"max temp\",\r\n      data: maxTemp,\r\n      borderColor: \"#1B079C\",\r\n      borderCapStyle: \"round\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst zoomOptions: ZoomPluginOptions = {\r\n  zoom: {\r\n    wheel: {\r\n      enabled: true,\r\n    },\r\n\r\n    pinch: {\r\n      enabled: true,\r\n    },\r\n\r\n    mode: \"xy\",\r\n\r\n    onZoomComplete: ({ chart }: { chart: Chart }) => {\r\n      console.log(`on zoom complete ${Math.random()}`);\r\n    },\r\n  },\r\n\r\n  pan: {\r\n    enabled: true,\r\n    mode: \"xy\",\r\n\r\n    onPanComplete: ({ chart }: { chart: Chart }) => {\r\n      console.log(`on pan complete ${Math.random()}`);\r\n    },\r\n  },\r\n\r\n  // limits: {\r\n  //   y: {\r\n  //     min: -100,\r\n  //     max: 100,\r\n  //   },\r\n  // },\r\n};\r\n\r\nconst xAxisOptions: ScaleOptions<\"time\"> = {\r\n  grid: {\r\n    color: \"#E8E8E8\",\r\n    tickColor: \"transparent\",\r\n  },\r\n\r\n  type: \"time\",\r\n\r\n  ticks: {\r\n    autoSkip: false,\r\n    autoSkipPadding: 10,\r\n    maxRotation: 0,\r\n    color: \"#999999\",\r\n  },\r\n};\r\n\r\nconst yAxisOptions: ScaleOptions<\"linear\"> = {\r\n  grid: {\r\n    tickColor: \"transparent\",\r\n    color: \"#E8E8E8\",\r\n    drawBorder: true,\r\n  },\r\n\r\n  ticks: {\r\n    color: \"#999999\",\r\n    // callback: (val, index, ticks) =>\r\n    //   index === 0 || index === ticks.length - 1 ? null : val,\r\n  },\r\n};\r\n\r\nconst options: ChartOptions = {\r\n  plugins: {\r\n    zoom: zoomOptions,\r\n\r\n    tooltip: {\r\n      mode: \"index\",\r\n      intersect: false,\r\n    },\r\n  },\r\n\r\n  onHover(e: ChartEvent, elements: ActiveElement[], chart: Chart) {\r\n    console.log(`on hover ${Math.random()}`);\r\n  },\r\n\r\n  scales: {\r\n    x: xAxisOptions,\r\n    y: yAxisOptions,\r\n  },\r\n};\r\n\r\nexport const chartConfig: ChartConfiguration = {\r\n  type: \"line\",\r\n  options: options,\r\n  data,\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { Chart, registerables } from \"chart.js\";\nimport \"chartjs-adapter-moment\";\nimport zoomPlugin from \"chartjs-plugin-zoom\";\nimport { chartConfig } from \"./config\";\nimport moment from \"moment\";\n\nChart.register(...registerables);\nChart.register(zoomPlugin);\n\nfunction App() {\n  const divRef = useRef<HTMLCanvasElement | null>(null);\n  const [chart, setChart] = useState<Chart>();\n\n  useEffect(() => {\n    const chartInstance = new Chart(divRef.current, chartConfig);\n    setChart(chartInstance);\n\n    return () => chartInstance.destroy();\n  }, []);\n\n  const handle90daysClick = () => {\n    chart?.zoomScale(\n      \"x\",\n      {\n        min: moment().subtract(90, \"d\").valueOf(),\n        max: moment().valueOf(),\n      },\n      \"normal\"\n    );\n\n    chart?.update();\n  };\n\n  const handle24daysClick = () => {\n    chart?.zoomScale(\n      \"x\",\n      {\n        min: moment().subtract(24, \"h\").valueOf(),\n        max: moment().valueOf(),\n      },\n      \"normal\"\n    );\n\n    chart?.update();\n  };\n\n  const handleReset = () => chart?.resetZoom();\n\n  return (\n    <div\n      style={{\n        height: \"100vh\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n      }}\n    >\n      <div style={{ display: \"flex\", margin: 10 }}>\n        <button style={{ marginRight: \"10px\" }} onClick={handle90daysClick}>\n          90 days\n        </button>\n        <button onClick={handle24daysClick} style={{ marginRight: \"10px\" }}>\n          24 hours\n        </button>\n        <button onClick={handleReset}>reset</button>\n      </div>\n      <div style={{ width: 800, height: 600 }}>\n        <canvas ref={divRef} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}